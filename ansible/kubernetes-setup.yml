---
- name: Kubernetes Cluster Setup
  hosts: all
  become: yes
  vars:
    kubernetes_version: '1.29.0'
    pod_network_cidr: '192.168.0.0/16'
  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Remove swap entry from /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#]*\s+swap\s+.*)$'
        replace: '# \1'
        backup: yes

    - name: Load necessary kernel modules configuration
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Ensure kernel modules are loaded
      command: modprobe {{ item }}
      loop:
        - overlay
        - br_netfilter
      ignore_errors: yes

    - name: Set system configurations for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables  = 1
          net.bridge.bridge-nf-call-iptables   = 1
          net.ipv4.ip_forward                  = 1

    - name: Apply sysctl params
      command: sysctl --system

    - name: Install containerd prerequisites
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - socat
        state: present

    - name: Install containerd and runc
      apt:
        name:
          - containerd
          - runc
        state: present

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory

    - name: Generate default containerd configuration
      shell: containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Set SystemdCgroup to true in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: '^(\s*)SystemdCgroup = false'
        replace: '\1SystemdCgroup = true'

    - name: Restart and enable containerd service
      systemd:
        name: containerd.service
        state: restarted
        enabled: yes

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        state: present
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes apt repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        filename: kubernetes

    - name: Update apt cache after adding Kubernetes repo
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        allow_downgrade: yes

    - name: Hold Kubernetes packages at current version
      command: apt-mark hold kubelet kubeadm kubectl

- name: Initialize Kubernetes Control Plane Node
  hosts: control_plane
  become: yes
  vars:
    pod_network_cidr: '192.168.0.0/16'
  tasks:
    - name: Initialize Kubernetes cluster
      command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init

    - name: Create .kube directory
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        mode: 0755

    - name: Copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        mode: 0644
        remote_src: yes

    - name: Generate kubeadm join command
      command: kubeadm token create --print-join-command
      register: kubeadm_join_command

    - name: Set kubeadm join command as fact
      set_fact:
        kubeadm_join_cmd: "{{ kubeadm_join_command.stdout }}"

    - name: Install Calico network plugin
      shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

- name: Join Worker Nodes to Cluster
  hosts: workers
  become: yes
  tasks:
    - name: Retrieve kubeadm join command from master
      set_fact:
        kubeadm_join_cmd: "{{ hostvars[groups['master'][0]]['kubeadm_join_cmd'] }}"

    - name: Join the node to the Kubernetes cluster
      command: "{{ kubeadm_join_cmd }}"
      args:
        creates: /etc/kubernetes/kubelet.conf